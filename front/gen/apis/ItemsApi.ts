/* tslint:disable */
/* eslint-disable */
/**
 * 物販(仮) Document
 * 物販(仮) の API リファレンスです
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateItemDto,
  ResponseItemDto,
  ResponseItemsDto,
} from '../models';
import {
    CreateItemDtoFromJSON,
    CreateItemDtoToJSON,
    ResponseItemDtoFromJSON,
    ResponseItemDtoToJSON,
    ResponseItemsDtoFromJSON,
    ResponseItemsDtoToJSON,
} from '../models';

export interface ItemsControllerMakeItemRequest {
    createItemDto: CreateItemDto;
}

/**
 * ItemsApi - interface
 * 
 * @export
 * @interface ItemsApiInterface
 */
export interface ItemsApiInterface {
    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ItemsApiInterface
     */
    itemsControllerFindAllRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseItemsDto>>;

    /**
     */
    itemsControllerFindAll(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseItemsDto>;

    /**
     * 
     * @param {CreateItemDto} createItemDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ItemsApiInterface
     */
    itemsControllerMakeItemRaw(requestParameters: ItemsControllerMakeItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseItemDto>>;

    /**
     */
    itemsControllerMakeItem(requestParameters: ItemsControllerMakeItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseItemDto>;

}

/**
 * 
 */
export class ItemsApi extends runtime.BaseAPI implements ItemsApiInterface {

    /**
     */
    async itemsControllerFindAllRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseItemsDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/items`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseItemsDtoFromJSON(jsonValue));
    }

    /**
     */
    async itemsControllerFindAll(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseItemsDto> {
        const response = await this.itemsControllerFindAllRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async itemsControllerMakeItemRaw(requestParameters: ItemsControllerMakeItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseItemDto>> {
        if (requestParameters.createItemDto === null || requestParameters.createItemDto === undefined) {
            throw new runtime.RequiredError('createItemDto','Required parameter requestParameters.createItemDto was null or undefined when calling itemsControllerMakeItem.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/items`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateItemDtoToJSON(requestParameters.createItemDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseItemDtoFromJSON(jsonValue));
    }

    /**
     */
    async itemsControllerMakeItem(requestParameters: ItemsControllerMakeItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseItemDto> {
        const response = await this.itemsControllerMakeItemRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
